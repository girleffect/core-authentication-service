swagger: '2.0'

schemes:
  - https
  - http

securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: X-API-Key

security:
  - APIKeyHeader: []

host: 'localhost:8080'

info:
  title: Access Control API
  description: |
    # The Access Control API

    ## Overview
    The Access Control API is an API exposed to other core components. It uses an API Key in an HTTP header to
    perform authentication and authorisation.

    Most of the API calls facilitates CRUD of the entities defined in the Access Control component. Others calls
    allows the retrieval of information in a form that is convenient for other components (most notably the
    Management Layer) to consume.
  version: ''

basePath: /api/v1

parameters:
  optional_limit:
    description: An optional query parameter to limit the number of results returned.
    in: query
    name: limit
    required: false
    type: integer
    minimum: 1
    maximum: 100
    default: 20
  optional_offset:
    description: >-
      An optional query parameter specifying the offset in the result set to
      start from.
    in: query
    name: offset
    required: false
    type: integer
    default: 0
    minimum: 0
  optional_domain_filter:
    description: An optional query parameter to filter by domain_id
    in: query
    name: domain_id
    required: false
    type: integer
  optional_invitation_filter:
    description: An optional query parameter to filter by invitation_id
    in: query
    name: invitation_id
    required: false
    type: string
    format: uuid
  optional_parent_filter:
    description: An optional query parameter to filter by parent_id
    in: query
    name: parent_id
    required: false
    type: integer
  optional_role_filter:
    description: An optional query parameter to filter by role_id
    in: query
    name: role_id
    required: false
    type: integer
  optional_site_filter:
    description: An optional query parameter to filter by site_id
    in: query
    name: site_id
    required: false
    type: integer
  optional_user_filter:
    description: An optional query parameter to filter by user_id
    in: query
    name: user_id
    required: false
    type: string
    format: uuid
  optional_cutoff_date:
    description: An optional cutoff date to purge invites before this date
    in: query
    name: cutoff_date
    required: false
    type: string
    format: date
  domain_id:
    description: A unique integer value identifying the domain.
    in: path
    name: domain_id
    required: true
    type: integer
  invitation_id:
    description: A UUID value identifying the invitation.
    in: path
    name: invitation_id
    required: true
    type: string
    format: uuid
  permission_id:
    description: A unique integer value identifying the permission.
    in: path
    name: permission_id
    required: true
    type: integer
  resource_id:
    description: A unique integer value identifying the resource.
    in: path
    name: resource_id
    required: true
    type: integer
  role_id:
    description: A unique integer value identifying the role.
    in: path
    name: role_id
    required: true
    type: integer
  site_id:
    description: A unique integer value identifying the site.
    in: path
    name: site_id
    required: true
    type: integer
  user_id:
    description: A UUID value identifying the user.
    in: path
    name: user_id
    required: true
    type: string
    format: uuid

definitions:
  domain:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      parent_id:
        type: integer
      name:
        type: string
        maxLength: 100
      description:
        type: string
      created_at:
        type: string
        format: 'date-time'
        readOnly: true
      updated_at:
        type: string
        format: 'date-time'
        readOnly: true
    required:
      - id
      - name
      - created_at
      - updated_at

  domain_create:
    type: object
    properties:
      parent_id:
        type: integer
      name:
        type: string
        maxLength: 100
      description:
        type: string
    required:
      - name

  domain_update:
    type: object
    properties:
      parent_id:
        type: integer
      name:
        type: string
        maxLength: 100
      description:
        type: string
    minProperties: 1

  role_label:
    type: string
    maxLength: 100

  site:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      name:
        type: string
        maxLength: 30
      client_id:
        type: integer
      domain_id:
        type: integer
      description:
        type: string
      is_active:
        type: boolean
      created_at:
        type: string
        format: 'date-time'
        readOnly: true
      updated_at:
        type: string
        format: 'date-time'
        readOnly: true
    required:
      - id
      - domain_id
      - name
      - is_active
      - created_at
      - updated_at

  site_create:
    type: object
    properties:
      name:
        type: string
        maxLength: 30
      client_id:
        type: integer
      domain_id:
        type: integer
      description:
        type: string
      is_active:
        type: boolean
    required:
      - domain_id
      - name

  site_update:
    type: object
    properties:
      client_id:
        type: integer
      domain_id:
        type: integer
      name:
        type: string
        maxLength: 30
      description:
        type: string
      is_active:
        type: boolean
    minProperties: 1

  role:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      label:
        $ref: '#/definitions/role_label'
      requires_2fa:
        type: boolean
      description:
        type: string
      created_at:
        type: string
        format: 'date-time'
        readOnly: true
      updated_at:
        type: string
        format: 'date-time'
        readOnly: true
    required:
      - id
      - label
      - requires_2fa
      - created_at
      - updated_at

  role_create:
    type: object
    properties:
      label:
        $ref: '#/definitions/role_label'
      requires_2fa:
        type: boolean
        default: true
      description:
        type: string
    required:
      - label

  role_update:
    type: object
    properties:
      label:
        type: string
        maxLength: 100
      requires_2fa:
        type: boolean
      description:
        type: string
    minProperties: 1

  site_role:
    type: object
    properties:
      site_id:
        type: integer
      role_id:
        type: integer
      grant_implicitly:
        type: boolean
      created_at:
        type: string
        format: 'date-time'
        readOnly: true
      updated_at:
        type: string
        format: 'date-time'
        readOnly: true
    required:
      - site_id
      - role_id
      - grant_implicitly
      - created_at
      - updated_at

  site_role_create:
    type: object
    properties:
      site_id:
        type: integer
      role_id:
        type: integer
      grant_implicitly:
        type: boolean
    required:
      - site_id
      - role_id

  site_role_update:
    type: object
    properties:
      grant_implicitly:
        type: boolean
    minProperties: 1

  domain_role:
    type: object
    properties:
      domain_id:
        type: integer
      role_id:
        type: integer
      grant_implicitly:
        type: boolean
      created_at:
        type: string
        format: 'date-time'
        readOnly: true
      updated_at:
        type: string
        format: 'date-time'
        readOnly: true
    required:
      - domain_id
      - role_id
      - grant_implicitly
      - created_at
      - updated_at

  domain_role_create:
    type: object
    properties:
      domain_id:
        type: integer
      role_id:
        type: integer
      grant_implicitly:
        type: boolean
    required:
      - domain_id
      - role_id

  domain_role_update:
    type: object
    properties:
      grant_implicitly:
        type: boolean
    minProperties: 1

  user_domain_role:
    type: object
    properties:
      user_id:
        type: string
        format: uuid
      domain_id:
        type: integer
      role_id:
        type: integer
      created_at:
        type: string
        format: 'date-time'
        readOnly: true
      updated_at:
        type: string
        format: 'date-time'
        readOnly: true
    required:
      - user_id
      - domain_id
      - role_id
      - created_at
      - updated_at

  user_domain_role_create:
    type: object
    properties:
      user_id:
        type: string
        format: uuid
      domain_id:
        type: integer
      role_id:
        type: integer
    required:
      - user_id
      - domain_id
      - role_id

  user_site_role:
    type: object
    properties:
      user_id:
        type: string
        format: uuid
      site_id:
        type: integer
      role_id:
        type: integer
      created_at:
        type: string
        format: 'date-time'
        readOnly: true
      updated_at:
        type: string
        format: 'date-time'
        readOnly: true
    required:
      - user_id
      - site_id
      - role_id
      - created_at
      - updated_at

  user_site_role_create:
    type: object
    properties:
      user_id:
        type: string
        format: uuid
      site_id:
        type: integer
      role_id:
        type: integer
    required:
      - user_id
      - site_id
      - role_id

  permission:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      name:
        type: string
        maxLength: 50
      description:
        type: string
      created_at:
        type: string
        format: 'date-time'
        readOnly: true
      updated_at:
        type: string
        format: 'date-time'
        readOnly: true
    required:
      - id
      - name
      - created_at
      - updated_at

  permission_create:
    type: object
    properties:
      name:
        type: string
        maxLength: 50
      description:
        type: string
    required:
      - name

  permission_update:
    type: object
    properties:
      name:
        type: string
        maxLength: 50
      description:
        type: string
    minProperties: 1

  resource:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      urn:
        type: string
        format: uri
      description:
        type: string
      created_at:
        type: string
        format: 'date-time'
        readOnly: true
      updated_at:
        type: string
        format: 'date-time'
        readOnly: true
    required:
      - id
      - urn
      - created_at
      - updated_at

  resource_create:
    type: object
    properties:
      urn:
        type: string
        format: uri
      description:
        type: string
    required:
      - urn

  resource_update:
    type: object
    properties:
      urn:
        type: string
        format: uri
      description:
        type: string
    minProperties: 1

  role_resource_permission:
    type: object
    properties:
      role_id:
        type: integer
      resource_id:
        type: integer
      permission_id:
        type: integer
      created_at:
        type: string
        format: 'date-time'
        readOnly: true
      updated_at:
        type: string
        format: 'date-time'
        readOnly: true
    required:
      - role_id
      - resource_id
      - permission_id
      - created_at
      - updated_at

  role_resource_permission_create:
    type: object
    properties:
      role_id:
        type: integer
      resource_id:
        type: integer
      permission_id:
        type: integer
    required:
      - role_id
      - resource_id
      - permission_id

  invitation:
    type: object
    properties:
      id:
        type: string
        format: uuid
        readOnly: true
      invitor_id:
        type: string
        format: uuid
        description: The user that created the invitation
      first_name:
        type: string
        maxLength: 100
      last_name:
        type: string
        maxLength: 100
      email:
        type: string
        format: email
      organisation_id:
        type: integer
      expires_at:
        type: string
        format: 'date-time'
      created_at:
        type: string
        format: 'date-time'
        readOnly: true
      updated_at:
        type: string
        format: 'date-time'
        readOnly: true
    required:
      - id
      - invitor_id
      - first_name
      - last_name
      - email
      - organisation_id
      - expires_at
      - created_at
      - updated_at

  invitation_create:
    type: object
    properties:
      invitor_id:
        type: string
        format: uuid
        description: The user that created the invitation
      first_name:
        type: string
        maxLength: 100
      last_name:
        type: string
        maxLength: 100
      email:
        type: string
        format: email
      organisation_id:
        type: integer
      expires_at:
        type: string
        format: 'date-time'
    required:
      - invitor_id
      - first_name
      - last_name
      - email
      - organisation_id

  invitation_update:
    type: object
    properties:
      invitor_id:
        type: string
        format: uuid
        description: The user that created the invitation
      first_name:
        type: string
        maxLength: 100
      last_name:
        type: string
        maxLength: 100
      email:
        type: string
        format: email
      organisation_id:
        type: integer
      expires_at:
        type: string
        format: 'date-time'
    minProperties: 1

  invitation_domain_role:
    type: object
    properties:
      invitation_id:
        type: string
        format: uuid
      domain_id:
        type: integer
      role_id:
        type: integer
      created_at:
        type: string
        format: 'date-time'
        readOnly: true
      updated_at:
        type: string
        format: 'date-time'
        readOnly: true
    required:
      - invitation_id
      - domain_id
      - role_id
      - created_at
      - updated_at

  invitation_domain_role_create:
    type: object
    properties:
      invitation_id:
        type: string
        format: uuid
      domain_id:
        type: integer
      role_id:
        type: integer
    required:
      - invitation_id
      - domain_id
      - role_id

  invitation_site_role:
    type: object
    properties:
      invitation_id:
        type: string
        format: uuid
      site_id:
        type: integer
      role_id:
        type: integer
      created_at:
        type: string
        format: 'date-time'
        readOnly: true
      updated_at:
        type: string
        format: 'date-time'
        readOnly: true
    required:
      - invitation_id
      - site_id
      - role_id
      - created_at
      - updated_at

  invitation_site_role_create:
    type: object
    properties:
      invitation_id:
        type: string
        format: uuid
      site_id:
        type: integer
      role_id:
        type: integer
    required:
      - invitation_id
      - site_id
      - role_id

  site_role_labels_aggregated:
    description: 'An object containing a site ID and an aggregated list of all the role labels supported
      by the site and all the domains in its lineage.'
    type: object
    properties:
      site_id:
        type: integer
      roles:
        type: array
        items:
          $ref: '#/definitions/role_label'

  user_site_role_labels_aggregated:
    description: 'An object containing a user ID, site ID and an aggregated list of all the role labels
      assigned to the user for the site and all the domains in its lineage.'
    type: object
    properties:
      user_id:
        type: string
        format: uuid
      site_id:
        type: integer
      roles:
        type: array
        items:
          $ref: '#/definitions/role_label'

  domain_roles:
    description: 'An object containing the domain roles defined for a given domain and it''s lineage.'
    type: object
    properties:
      domain_id:
        description: 'The domain for which the request was made.'
        type: integer
      roles_map:
        description: 'A dictionary where the keys are domain ids prefixed with `d:` and the values are lists of role ids.'
        type: object
        additionalProperties:
          description: 'The list of role ids for the domain'
          type: array
          items:
            type: integer
        example:
          "d:1": [1]
          "d:2": [1, 2]
    required:
      - domain_id
      - roles_map

  site_and_domain_roles:
    description: 'An object containing the site- and domain lineage roles defined for a given site.'
    type: object
    properties:
      site_id:
        description: 'The site for which the request was made.'
        type: integer
      roles_map:
        description: 'A dictionary where the keys are site and domain ids prefixed with `s:` and `d:`, respectively
           and the values are lists of role ids.'
        type: object
        additionalProperties:
          description: 'The list of role ids for the site or domain'
          type: array
          items:
            type: integer
        example:
          "s:1": [1, 2, 3]
          "d:1": [1]
          "d:2": [1, 2]
    required:
      - site_id
      - roles_map

  all_user_roles:
    description: 'An object containing the effective roles that a user has in any place in the organisational tree.'
    type: object
    properties:
      user_id:
        type: string
        format: uuid
      roles_map:
        type: object
        description: 'Domain and site roles'
        additionalProperties:
          type: array
          items:
            type: integer
        example:
          "s:1": [1, 2, 3]
          "d:1": [1]
          "d:2": [1, 2]
    required:
      - user_id
      - roles_map

  user_with_roles:
    description: 'A user with their roles.'
    type: object
    properties:
      user_id:
        type: string
        format: uuid
      role_ids:
        type: array
        items:
          type: integer

  resource_permission:
    description: 'An object containing (resource, permission) pairs'
    type: object
    properties:
      resource_id:
        type: integer
      permission_id:
        type: integer
    required:
      - resource_id
      - permission_id
    additionalProperties: false

  health_info:
    description: 'Health check response'
    type: object
    properties:
      host:
        type: string
      server_timestamp:
        type: string
        format: 'date-time'
      version:
        type: string
      db_timestamp:
        type: string
        format: 'date-time'
    required:
    - host
    - server_timestamp
    - version
    - db_timestamp

  purged_invitations:
    type: object
    properties:
      amount:
        type: integer
    required:
      - amount

  user_deletion_data:
    type: object
    properties:
      amount:
        type: integer
    required:
      - amount


paths:
  /ops/users/{user_id}/delete:
    parameters:
      - $ref: '#/parameters/user_id'
    get:
      operationId: delete_user_data
      produces:
        - application/json
      responses:
        200:
          description: 'Delete all user data on UDS'
          schema:
            $ref: '#/definitions/user_deletion_data'
        403:
          description: 'Forbidden'
      tags:
        - operational

  /ops/healthcheck:
    get:
      security: [ ]
      description: 'Get the status of the service.'
      operationId: healthcheck
      produces:
        - application/json
      responses:
        200:
          description: 'The service is operating normally.'
          schema:
            $ref: '#/definitions/health_info'
      tags:
        - operational

  /ops/get_sites_under_domain/{domain_id}:
    parameters:
      - $ref: '#/parameters/domain_id'
    get:
      description: 'Get a list of all sites linked directly or indirectly to the specified domain.'
      operationId: get_sites_under_domain
      produces:
        - application/json
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/site'
        403:
          description: 'Forbidden'
      tags:
        - operational

  /ops/site_role_labels_aggregated/{site_id}:
    parameters:
      - $ref: '#/parameters/site_id'
    get:
      description: 'Get a list of all possible role labels that a user can have from the specified site''s perspective.'
      operationId: get_site_role_labels_aggregated
      produces:
        - application/json
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/site_role_labels_aggregated'
        403:
          description: 'Forbidden'
      tags:
        - operational

  /ops/tech_admin_resource_permissions:
    get:
      description: Get a list of all possible permissions any user can have. This is effectively
        what a tech admin user can do.
      operationId: get_tech_admin_resource_permissions
      produces:
        - application/json
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/resource_permission'
        403:
          description: 'Forbidden'
      tags:
        - operational

  /ops/resource_permissions_for_roles:
    parameters:
      - name: role_ids
        in: query
        required: true
        type: array
        collectionFormat: csv
        items:
          type: integer
        uniqueItems: true
        minItems: 1
    get:
      description: Get a list of all resource permissions the specified roles have.
      operationId: get_resource_permissions_for_roles
      produces:
        - application/json
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/resource_permission'
        403:
          description: 'Forbidden'
      tags:
        - operational

  /ops/user_site_role_labels_aggregated/{user_id}/{site_id}:
    parameters:
      - $ref: '#/parameters/user_id'
      - $ref: '#/parameters/site_id'
    get:
      description: 'Get a list of all role labels that the specified user has from the specified site''s perspective.'
      operationId: get_user_site_role_labels_aggregated
      produces:
        - application/json
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/user_site_role_labels_aggregated'
        403:
          description: 'Forbidden'
      tags:
        - operational

  /ops/domain_roles/{domain_id}:
    parameters:
      - $ref: '#/parameters/domain_id'
    get:
      description: 'Get the domain and its lineage''s roles defined for a domain.'
      operationId: get_domain_roles
      produces:
        - application/json
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/domain_roles'
        403:
          description: 'Forbidden'
      tags:
        - operational

  /ops/site_and_domain_roles/{site_id}:
    parameters:
      - $ref: '#/parameters/site_id'
    get:
      description: 'Get the site- and domain lineage roles defined for a given site.'
      operationId: get_site_and_domain_roles
      produces:
        - application/json
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/site_and_domain_roles'
        403:
          description: 'Forbidden'
      tags:
        - operational

  /ops/all_user_roles/{user_id}:
    parameters:
      - $ref: '#/parameters/user_id'
    get:
      description: 'Get the effective roles that a user has at any place in the organisational tree.'
      operationId: get_all_user_roles
      produces:
        - application/json
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/all_user_roles'
        403:
          description: 'Forbidden'
        404:
          description: 'User not found'
      tags:
        - operational

  /ops/users_with_roles_for_domain/{domain_id}:
    parameters:
      - $ref: '#/parameters/domain_id'
    get:
      description: 'Get a list of Users with their effective roles within the given domain.'
      operationId: get_users_with_roles_for_domain
      produces:
        - application/json
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/user_with_roles'
        403:
          description: 'Forbidden'
        404:
          description: 'Domain not found'
      tags:
        - operational

  /ops/users_with_roles_for_site/{site_id}:
    parameters:
      - $ref: '#/parameters/site_id'
    get:
      description: 'Get a list of Users with their effective roles within the given site.'
      operationId: get_users_with_roles_for_site
      produces:
        - application/json
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/user_with_roles'
        403:
          description: 'Forbidden'
        404:
          description: 'Site not found'
      tags:
        - operational

  /ops/purge_expired_invitations:
    get:
      operationId: purge_expired_invitations
      parameters:
        - $ref: '#/parameters/optional_cutoff_date'
      produces:
        - application/json
      responses:
        200:
          description: 'Expired Invitations Purged'
          schema:
            $ref: '#/definitions/purged_invitations'
        403:
          description: 'Forbidden'
      tags:
        - operational

  /domains:
    get:
      operationId: domain_list
      parameters:
        - $ref: '#/parameters/optional_offset'
        - $ref: '#/parameters/optional_limit'
        - $ref: '#/parameters/optional_parent_filter'
        - name: domain_ids
          description: An optional list of domain ids
          in: query
          type: array
          items:
            type: integer
          required: false
          minItems: 0
          collectionFormat: multi
          uniqueItems: true
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            X-Total-Count:
                type: integer
                description: The total number of results matching the query
          schema:
            type: array
            items:
              $ref: '#/definitions/domain'
      tags:
        - access_control
    post:
      consumes:
        - application/json
      operationId: domain_create
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/domain_create'
      produces:
        - application/json
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/domain'
      tags:
        - access_control

  /domains/{domain_id}:
    parameters:
      - $ref: '#/parameters/domain_id'
    delete:
      operationId: domain_delete
      responses:
        '204':
          description: ''
      tags:
        - access_control
    get:
      operationId: domain_read
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/domain'
      tags:
        - access_control
    put:
      consumes:
        - application/json
      operationId: domain_update
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/domain_update'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/domain'
      tags:
        - access_control

  /domainroles:
    get:
      operationId: domainrole_list
      parameters:
        - $ref: '#/parameters/optional_offset'
        - $ref: '#/parameters/optional_limit'
        - $ref: '#/parameters/optional_domain_filter'
        - $ref: '#/parameters/optional_role_filter'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            X-Total-Count:
                type: integer
                description: The total number of results matching the query
          schema:
            type: array
            items:
              $ref: '#/definitions/domain_role'
      tags:
        - access_control
    post:
      consumes:
        - application/json
      operationId: domainrole_create
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/domain_role_create'
      produces:
        - application/json
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/domain_role'
      tags:
        - access_control

  '/domainroles/{domain_id}/{role_id}':
    parameters:
      - $ref: '#/parameters/domain_id'
      - $ref: '#/parameters/role_id'
    delete:
      operationId: domainrole_delete
      responses:
        '204':
          description: ''
      tags:
        - access_control
    get:
      operationId: domainrole_read
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/domain_role'
      tags:
        - access_control
    put:
      consumes:
        - application/json
      operationId: domainrole_update
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/domain_role_update'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/domain_role'
      tags:
        - access_control

  /invitations:
    get:
      operationId: invitation_list
      parameters:
        - $ref: '#/parameters/optional_offset'
        - $ref: '#/parameters/optional_limit'
        - description: Optional filter based on the invitor (the user who created the invitation)
          name: invitor_id
          in: query
          required: false
          type: string
          format: uuid
        - name: invitation_ids
          description: An optional list of invitation ids
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
          minItems: 0
          collectionFormat: multi
          uniqueItems: true
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            X-Total-Count:
                type: integer
                description: The total number of results matching the query
          schema:
            type: array
            items:
              $ref: '#/definitions/invitation'
      tags:
        - access_control
    post:
      consumes:
        - application/json
      operationId: invitation_create
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/invitation_create'
      produces:
        - application/json
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/invitation'
      tags:
        - access_control

  '/invitations/{invitation_id}':
    parameters:
      - $ref: '#/parameters/invitation_id'
    delete:
      operationId: invitation_delete
      responses:
        '204':
          description: ''
      tags:
        - access_control
    get:
      operationId: invitation_read
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/invitation'
      tags:
        - access_control
    put:
      consumes:
        - application/json
      operationId: invitation_update
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/invitation_update'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/invitation'
      tags:
        - access_control

  '/invitations/{invitation_id}/redeem/{user_id}':
    parameters:
      - $ref: '#/parameters/invitation_id'
      - $ref: '#/parameters/user_id'
    get:
      description: >-
        Assign all roles assigned to the invitation to the specified user, removing the invitation and related
        configuration when done.
        Note: We may have to change the role assignment to an asynchronous task depending on the complexity of the
        implementation.
      operationId: invitation_redeem
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/all_user_roles'
        '410':
          description: 'Gone: Resource has expired or no longer exists'
      tags:
        - access_control

  /invitationdomainroles:
    get:
      operationId: invitationdomainrole_list
      parameters:
        - $ref: '#/parameters/optional_offset'
        - $ref: '#/parameters/optional_limit'
        - $ref: '#/parameters/optional_invitation_filter'
        - $ref: '#/parameters/optional_domain_filter'
        - $ref: '#/parameters/optional_role_filter'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            X-Total-Count:
                type: integer
                description: The total number of results matching the query
          schema:
            type: array
            items:
              $ref: '#/definitions/invitation_domain_role'
      tags:
        - access_control
    post:
      consumes:
        - application/json
      operationId: invitationdomainrole_create
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/invitation_domain_role_create'
      produces:
        - application/json
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/invitation_domain_role'
      tags:
        - access_control

  '/invitationdomainroles/{invitation_id}/{domain_id}/{role_id}':
    parameters:
      - $ref: '#/parameters/invitation_id'
      - $ref: '#/parameters/domain_id'
      - $ref: '#/parameters/role_id'
    delete:
      operationId: invitationdomainrole_delete
      produces:
        - application/json
      responses:
        '204':
          description: ''
      tags:
        - access_control
    get:
      operationId: invitationdomainrole_read
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/invitation_domain_role'
      tags:
        - access_control

  /invitationsiteroles:
    get:
      operationId: invitationsiterole_list
      parameters:
        - $ref: '#/parameters/optional_offset'
        - $ref: '#/parameters/optional_limit'
        - $ref: '#/parameters/optional_invitation_filter'
        - $ref: '#/parameters/optional_site_filter'
        - $ref: '#/parameters/optional_role_filter'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            X-Total-Count:
                type: integer
                description: The total number of results matching the query
          schema:
            type: array
            items:
              $ref: '#/definitions/invitation_site_role'
      tags:
        - access_control
    post:
      consumes:
        - application/json
      operationId: invitationsiterole_create
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/invitation_site_role_create'
      produces:
        - application/json
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/invitation_site_role'
      tags:
        - access_control

  '/invitationsiteroles/{invitation_id}/{site_id}/{role_id}':
    parameters:
      - $ref: '#/parameters/invitation_id'
      - $ref: '#/parameters/site_id'
      - $ref: '#/parameters/role_id'
    delete:
      operationId: invitationsiterole_delete
      responses:
        '204':
          description: ''
      tags:
        - access_control
    get:
      operationId: invitationsiterole_read
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/invitation_site_role'
      tags:
        - access_control

  /permissions:
    get:
      operationId: permission_list
      parameters:
        - $ref: '#/parameters/optional_offset'
        - $ref: '#/parameters/optional_limit'
        - name: permission_ids
          description: An optional list of permission ids
          in: query
          type: array
          items:
            type: integer
          required: false
          minItems: 0
          collectionFormat: multi
          uniqueItems: true
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            X-Total-Count:
                type: integer
                description: The total number of results matching the query
          schema:
            type: array
            items:
              $ref: '#/definitions/permission'
      tags:
        - access_control
    post:
      consumes:
        - application/json
      operationId: permission_create
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/permission_create'
      produces:
        - application/json
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/permission'
      tags:
        - access_control

  '/permissions/{permission_id}':
    parameters:
      - $ref: '#/parameters/permission_id'
    delete:
      operationId: permission_delete
      responses:
        '204':
          description: ''
      tags:
        - access_control
    get:
      operationId: permission_read
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/permission'
      tags:
        - access_control
    put:
      consumes:
        - application/json
      operationId: permission_update
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/permission_update'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/permission'
      tags:
        - access_control

  /resources:
    get:
      operationId: resource_list
      parameters:
        - $ref: '#/parameters/optional_offset'
        - $ref: '#/parameters/optional_limit'
        - description: An optional URN prefix filter
          name: prefix
          in: query
          required: false
          type: string
        - name: resource_ids
          description: An optional list of resource ids
          in: query
          type: array
          items:
            type: integer
          required: false
          minItems: 0
          collectionFormat: multi
          uniqueItems: true
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            X-Total-Count:
                type: integer
                description: The total number of results matching the query
          schema:
            type: array
            items:
              $ref: '#/definitions/resource'
      tags:
        - access_control
    post:
      consumes:
        - application/json
      operationId: resource_create
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/resource_create'
      produces:
        - application/json
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/resource'
      tags:
        - access_control

  '/resources/{resource_id}':
    parameters:
      - $ref: '#/parameters/resource_id'
    delete:
      operationId: resource_delete
      responses:
        '204':
          description: ''
      tags:
        - access_control
    get:
      operationId: resource_read
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/resource'
      tags:
        - access_control
    put:
      consumes:
        - application/json
      operationId: resource_update
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/resource_update'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/resource'
      tags:
        - access_control

  /roles:
    get:
      operationId: role_list
      parameters:
        - $ref: '#/parameters/optional_offset'
        - $ref: '#/parameters/optional_limit'
        - name: role_ids
          description: An optional list of role ids
          in: query
          type: array
          items:
            type: integer
          required: false
          minItems: 0
          collectionFormat: multi
          uniqueItems: true
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            X-Total-Count:
                type: integer
                description: The total number of results matching the query
          schema:
            type: array
            items:
              $ref: '#/definitions/role'
      tags:
        - access_control
    post:
      consumes:
        - application/json
      operationId: role_create
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/role_create'
      produces:
        - application/json
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/role'
      tags:
        - access_control

  '/roles/{role_id}':
    parameters:
      - $ref: '#/parameters/role_id'
    delete:
      operationId: role_delete
      responses:
        '204':
          description: ''
      tags:
        - access_control
    get:
      operationId: role_read
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/role'
      tags:
        - access_control
    put:
      consumes:
        - application/json
      operationId: role_update
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/role_update'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/role'
      tags:
        - access_control

  /roleresourcepermissions:
    get:
      operationId: roleresourcepermission_list
      parameters:
        - $ref: '#/parameters/optional_offset'
        - $ref: '#/parameters/optional_limit'
        - $ref: '#/parameters/optional_role_filter'
        - description: An optional resource filter
          name: resource_id
          in: query
          required: false
          type: integer
        - description: An optional permission filter
          name: permission_id
          in: query
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            X-Total-Count:
                type: integer
                description: The total number of results matching the query
          schema:
            type: array
            items:
              $ref: '#/definitions/role_resource_permission'
      tags:
        - access_control
    post:
      consumes:
        - application/json
      operationId: roleresourcepermission_create
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/role_resource_permission_create'
      produces:
        - application/json
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/role_resource_permission'
      tags:
        - access_control

  '/roleresourcepermissions/{role_id}/{resource_id}/{permission_id}':
    parameters:
      - $ref: '#/parameters/role_id'
      - $ref: '#/parameters/resource_id'
      - $ref: '#/parameters/permission_id'
    delete:
      operationId: access_control-roleresourcepermission_delete
      responses:
        '204':
          description: ''
      tags:
        - access_control
    get:
      operationId: roleresourcepermission_read
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/role_resource_permission'
      tags:
        - access_control

  /sites:
    get:
      operationId: site_list
      parameters:
        - $ref: '#/parameters/optional_offset'
        - $ref: '#/parameters/optional_limit'
        - name: site_ids
          description: An optional list of site ids
          in: query
          type: array
          items:
            type: integer
          required: false
          minItems: 0
          collectionFormat: multi
          uniqueItems: true
        - name: client_id
          description: An optional client id to filter on
          in: query
          type: integer
          required: false
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            X-Total-Count:
                type: integer
                description: The total number of results matching the query
          schema:
            type: array
            items:
              $ref: '#/definitions/site'
      tags:
        - access_control
    post:
      consumes:
        - application/json
      operationId: site_create
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/site_create'
      produces:
        - application/json
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/site'
      tags:
        - access_control

  '/sites/{site_id}':
    parameters:
      - $ref: '#/parameters/site_id'
    delete:
      operationId: site_delete
      responses:
        '204':
          description: ''
      tags:
        - access_control
    get:
      operationId: site_read
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/site'
      tags:
        - access_control
    put:
      consumes:
        - application/json
      operationId: site_update
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/site_update'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/site'
      tags:
        - access_control

  /siteroles:
    get:
      operationId: siterole_list
      parameters:
        - $ref: '#/parameters/optional_offset'
        - $ref: '#/parameters/optional_limit'
        - $ref: '#/parameters/optional_site_filter'
        - $ref: '#/parameters/optional_role_filter'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            X-Total-Count:
                type: integer
                description: The total number of results matching the query
          schema:
            type: array
            items:
              $ref: '#/definitions/site_role'
      tags:
        - access_control
    post:
      consumes:
        - application/json
      operationId: siterole_create
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/site_role_create'
      produces:
        - application/json
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/site_role'
      tags:
        - access_control

  '/siteroles/{site_id}/{role_id}':
    parameters:
      - $ref: '#/parameters/site_id'
      - $ref: '#/parameters/role_id'
    delete:
      operationId: siterole_delete
      responses:
        '204':
          description: ''
      tags:
        - access_control
    get:
      operationId: siterole_read
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/site_role'
      tags:
        - access_control
    put:
      consumes:
        - application/json
      operationId: siterole_update
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/site_role_update'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/site_role'
      tags:
        - access_control

  /userdomainroles:
    get:
      operationId: userdomainrole_list
      parameters:
        - $ref: '#/parameters/optional_offset'
        - $ref: '#/parameters/optional_limit'
        - $ref: '#/parameters/optional_user_filter'
        - $ref: '#/parameters/optional_domain_filter'
        - $ref: '#/parameters/optional_role_filter'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            X-Total-Count:
                type: integer
                description: The total number of results matching the query
          schema:
            type: array
            items:
              $ref: '#/definitions/user_domain_role'
      tags:
        - access_control
    post:
      consumes:
        - application/json
      operationId: userdomainrole_create
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/user_domain_role_create'
      produces:
        - application/json
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/user_domain_role'
      tags:
        - access_control

  '/userdomainroles/{user_id}/{domain_id}/{role_id}':
    parameters:
      - $ref: '#/parameters/user_id'
      - $ref: '#/parameters/domain_id'
      - $ref: '#/parameters/role_id'
    delete:
      operationId: userdomainrole_delete
      responses:
        '204':
          description: ''
      tags:
        - access_control
    get:
      operationId: userdomainrole_read
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/user_domain_role'
      tags:
        - access_control

  /usersiteroles:
    get:
      operationId: usersiterole_list
      parameters:
        - $ref: '#/parameters/optional_offset'
        - $ref: '#/parameters/optional_limit'
        - $ref: '#/parameters/optional_user_filter'
        - $ref: '#/parameters/optional_site_filter'
        - $ref: '#/parameters/optional_role_filter'
      produces:
        - application/json
      responses:
        '200':
          description: ''
          headers:
            X-Total-Count:
                type: integer
                description: The total number of results matching the query
          schema:
            type: array
            items:
              $ref: '#/definitions/user_site_role'
      tags:
        - access_control
    post:
      consumes:
        - application/json
      operationId: usersiterole_create
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/user_site_role_create'
      produces:
        - application/json
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/user_site_role'
      tags:
        - access_control

  '/usersiteroles/{user_id}/{site_id}/{role_id}':
    parameters:
      - $ref: '#/parameters/user_id'
      - $ref: '#/parameters/site_id'
      - $ref: '#/parameters/role_id'
    delete:
      operationId: usersiterole_delete
      responses:
        '204':
          description: ''
      tags:
        - access_control
    get:
      operationId: usersiterole_read
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/user_site_role'
      tags:
        - access_control
